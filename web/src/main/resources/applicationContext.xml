<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!--<context:annotation-config/>-->

    <!--<aop:aspectj-autoproxy/>-->

    <context:component-scan base-package="com.sgs.quick4j"/>

    <import resource="spring-dubbo.xml"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="driverClassName" value="${spring.datasource.driver-class-name}"/>
        <property name="url" value="${spring.datasource.url}"/>
        <property name="username" value="${spring.datasource.username}"/>
        <property name="password" value="${spring.datasource.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${spring.datasource.initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${spring.datasource.maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <!--<property name="maxIdle" value="${maxIdle}"></property>-->
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${spring.datasource.minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${spring.datasource.maxWait}"></property>

        <property name="minEvictableIdleTimeMillis" value="60000"></property>
        <property name="testWhileIdle" value="true"></property>
        <property name="timeBetweenEvictionRunsMillis" value="45000"></property>
        <property name="validationQuery" value="select 'x'"></property>
        <property name="testOnBorrow" value="false"></property>
        <property name="defaultAutoCommit" value="false"></property>
        <property name="connectionInitSqls" value="set names utf8mb4;"/>
    </bean>

     <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描mapping.xml文件 -->
        <!--<property name="ma
        pperLocations" value="classpath:mybatis/**/*.xml"></property>-->
        <property name="mapperLocations" value="classpath*:com/sgs/quick4j/domain/repository/**/*Mapper.xml"></property>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.sgs.quick4j.domain.repository"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

</beans>